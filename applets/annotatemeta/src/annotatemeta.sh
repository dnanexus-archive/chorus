#!/bin/bash
# annotatemeta 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

main() {

    echo "Value of db: '$db'"
    echo "Value of lead_pi: '$lead_pi'"
    echo "Value of lead_pi_contact: '$lead_pi_contact'"
    echo "Value of DU_name: '$DU_name'"
    echo "Value of DU_contact: '$DU_contact'"
    echo "Value of source: '$source'"
    echo "Value of dataset_id: '$dataset_id'"
    echo "Value of description: '$description'"
    echo "Value of methodology: '$methodology'"
    echo "Value of build: '$build'"
    echo "Value of human_samples_no: '$human_samples_no'"
    echo "Value of controls: '$controls'"

    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$db" -o db

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    python /home/scripts/AnnotateMetadata.py -l $lead_pi -o $lead_pi_contact -d $DU_name -p $DU_contact -s $source -q $dataset_id -t $description -m $methodology  -b $build -n $human_samples_no -c $controls -r 'db'

    file_id=`dx upload SummaryDB.db -o "summarydb.db" --brief`
    dx-jobutil-add-output "SummaryDB" "$file_id"

}
