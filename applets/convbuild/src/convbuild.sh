#!/bin/bash
# crossmap 0.0.1
# Generated by dx-app-wizard.
#
# Basic execution pattern: Your app will run on a single machine from
# beginning to end.
#
# Your job's input variables (if any) will be loaded as environment
# variables before this script runs.  Any array inputs will be loaded
# as bash arrays.
#
# Any code outside of main() (or any entry point you may add) is
# ALWAYS executed, followed by running the entry point itself.
#
# See https://wiki.dnanexus.com/Developer-Portal for tutorials on how
# to modify this file.

set -e -x -o pipefail

main() {

    echo "Value of bedfile: '$bedfile'"
    echo "Value of frToAssembly: '$frToAssembly'"



    # The following line(s) use the dx command-line tool to download your file
    # inputs to the local file system using variable names for the filenames. To
    # recover the original filenames, you can use the output of "dx describe
    # "$variable" --name".

    dx download "$bedfile" -o bedfile

    # Fill in your application code here.
    #
    # To report any recognized errors in the correct format in
    # $HOME/job_error.json and exit this script, you can use the
    # dx-jobutil-report-error utility as follows:
    #
    #   dx-jobutil-report-error "My error message"
    #
    # Note however that this entire bash script is executed with -e
    # when running in the cloud, so any line which returns a nonzero
    # exit code will prematurely exit the script; if no error was
    # reported in the job_error.json file, then the failure reason
    # will be AppInternalError with a generic error message.

    awk '{print $1 "\t" $2 "\t" $2 "\t" $3 "\t" $4 "\t" $5  }' bedfile >  bed3plus.txt


    db_build=$(dx describe "$bedfile" --json | jq -r .properties.build)

    echo $db_build
    if [ -z $db_build ]; then
        dx-jobutil-report-error "Build not specified in the db for $cohort_name" AppError
    fi

    if [ "$frToAssembly" == "19to38" ]
    then
        if [[ "$db_build" == "hg19" ]]; then
            python /home/dnanexus/CrossMap-0.2.3/bin/CrossMap.py bed  hg19ToHg38.over.chain.gz bed3plus.txt newAssembly.txt
            toAssembly="hg38"
        else
            dx-jobutil-report-error "The build specified for the query ($build) differs from the build of the database ($db_build)" AppError
        fi
    elif [ "$frToAssembly" == "38to19" ]
    then
        if [[ "$db_build" == "hg38" ]]; then        
            python /home/dnanexus/CrossMap-0.2.3/bin/CrossMap.py bed hg38ToHg19.over.chain.gz bed3plus.txt newAssembly.txt
            toAssembly="hg19"
        else
            dx-jobutil-report-error "The build specified for the query ($build) differs from the build of the database ($db_build)" AppError
        fi
    elif [ "$frToAssembly" == "18to19" ]
    then
        if [[ "$db_build" == "hg18" ]]; then
            python /home/dnanexus/CrossMap-0.2.3/bin/CrossMap.py bed hg18ToHg19.over.chain.gz bed3plus.txt newAssembly.txt
            toAssembly="hg19"
        else
            dx-jobutil-report-error "The build specified for the query ($build) differs from the build of the database ($db_build)" AppError
        fi
    else
         echo "ERROR: No conversion chain file available"
         exit 1

    fi
    
    echo $toAssembly 
    cut -d$'\t' -f1,2,4,5,6 newAssembly.txt > summaryfile.txt 

    file_id=`dx upload summaryfile.txt -o "summaryfile.txt" --property build=$toAssembly --brief`
    dx-jobutil-add-output "summaryfile" "$file_id"


}
